#Using Python 3.7.3
#Selenium 4.11

#Import Libraries
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import Select
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
import pandas as pd
import time

#Read the list extracted from the PDF
df = pd.read_csv("output_prueba.csv", delimiter=',', quotechar='"')

#Remove Duplicates
articulos_df = df.drop_duplicates(subset=['NotaVenta'])
print(articulos_df)
# Crear listas para almacenar resultados
resultados_generales = []
resultados_tabla = []

#User & Password
username= "User"
password = "password"
file = open('Clientes')

#Web page
driver = webdriver.Chrome()
driver.get("https://webpage")
time.sleep(2)

#Insert User 
mBox = driver.find_element(By.XPATH,value='//*[@id="username"]')
mBox.send_keys(username)

#Insert Password
mBox = driver.find_element(By.XPATH,value='//*[@id="password"]')
mBox.send_keys(password)

#Login
driver.find_element(By.XPATH,value= '//*[@id="frmlogin"]/div[5]/div/input').click()
time.sleep(3)

#------------------------------Start the FOR----------------------------------------------
# Insert Sale Note cycle 
for index, row in articulos_df.iterrows():
    try:
        NotaVenta = row['NotaVenta']
        FechaDeVenta = row['FechaDeVenta']

        #Insert the Sale Note
        mBox = driver.find_element(By.XPATH, value='// *[ @ id = "inputNota"]')
        mBox.send_keys(NotaVenta)
        time.sleep(3)

        #Click on Search
        driver.find_element(By.XPATH,value= '/html/body/ul[1]').click()
        time.sleep(3)
 # ------------------------------INCIA SEGUNDO CICLO FOR-------------------------------------------------------------
        #Extract Sales Data
        WebDriverWait(driver, 10).until(
           EC.presence_of_element_located((By.XPATH, '/html/body/div/div[1]/section[2]/table[3]')))
        tabla = driver.find_element(By.XPATH, '/html/body/div/div[1]/section[2]/table[3]')
        filas_tabla = tabla.find_elements(By.TAG_NAME, "tr")

        for fila in filas_tabla[1:]:  # Comienza desde el segundo elemento (Ã­ndice 1)
           celdas = fila.find_elements(By.TAG_NAME, "td")
           if len(celdas) >= 3:  # Verificar que la fila tenga al menos tres celdas
              cantidad = celdas[0].text
              descripcion = celdas[1].text
              importe = celdas[2].text
              resultados_tabla.append(
                 {"NotaVenta": NotaVenta, "Cantidad": cantidad, "Descripcion": descripcion, "Importe": importe})
        print(f"NotaVenta:{NotaVenta}, Cantidad:{cantidad}, Descripcion:{descripcion}, Importe:{importe}")
        # ------------------------------Start the second cycle -------------------------------------------------------------

         #Select the Date Table
        tabla = driver.find_element(By.XPATH, '/html/body/div/div[1]/section[2]/table[1]')

        #Get the first Row
        primera_fila = tabla.find_element(By.TAG_NAME, 'tr')

        #Get the Date Value
        celda_fecha = primera_fila.find_element(By.TAG_NAME, 'td')

        #Get the Date from the text 
        fecha_venta = celda_fecha.text
        fecha_venta = fecha_venta.split(':')[-1].strip()

        #Print the DATE(esto es opcional, puedes quitarlo si no es necesario imprimir)
        print(f'Fecha de Venta: {fecha_venta}')

        #Go to the Next Table
        driver.find_element(By.XPATH, value='/html/body/div/div[1]/section[2]/div[3]/a').click()
        time.sleep(2)

        #Select Values from the dropdown list
        Apellidos_input = driver.find_element(By.XPATH, value='//*[@id="apellidos"]')
        Nombre_input = driver.find_element(By.XPATH, value='//*[@id="nombre"]')
        genero_dropdown = driver.find_element(By.XPATH, value='//*[@id="genero"]')
        edad_input = driver.find_element(By.XPATH, value='//*[@id="edadPaciente"]')
        info_dropdown = driver.find_element(By.XPATH, value='//*[@id="medioComunicacion"]')

        # Get the selected option
        Nombre = Apellidos_input.get_attribute('Value') +' ' + Nombre_input.get_attribute('Value')
        edad = edad_input.get_attribute('Value')

        genero_select = Select(genero_dropdown)
        genero_option = genero_select.first_selected_option

        info_select = Select(info_dropdown)
        info_option = info_select.first_selected_option

        # Get the selected option's text
        genero_option = genero_option.text
        info_option = info_option.text

        # Print the selected option's text
        print("NotaVenta:",NotaVenta," ,FechaVenta:",FechaDeVenta," ,Genero:",genero_option, " ,Edad:",edad, " ,Como se entero:",info_option)
        driver.find_element(By.XPATH,value= '/html/body/div[1]/div[1]/section[2]/div[2]/div[1]/a').click()

        #Add to General Results
        resultados_generales.append({
        "NotaVenta": NotaVenta,
        "FechaDeVenta": FechaDeVenta,
        "Genero": genero_option,
        "Edad": edad,
        "ComoSeEntero": info_option,
        })

    except Exception as e:
        print(f"No se encontraron resultados para {NotaVenta}.")
        mBox = driver.find_element(By.XPATH, value='// *[ @ id = "inputNota"]')
        mBox.clear()
#------------------------------TERMINA CICLO FOR-------------------------------------------
# Convert to DataFrame
df_generales = pd.DataFrame(resultados_generales)
df_tabla = pd.DataFrame(resultados_tabla)

# Save as CSV
df_generales.to_csv("resultados_generales.csv", index=False)
df_tabla.to_csv("resultados_tabla.csv", index=False)

# Close webdriver
driver.quit()
